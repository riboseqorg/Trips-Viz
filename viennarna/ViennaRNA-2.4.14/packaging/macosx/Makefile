# Makefile.in generated by automake 1.16.1 from Makefile.am.
# packaging/macosx/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ViennaRNA
pkgincludedir = $(includedir)/ViennaRNA
pkglibdir = $(libdir)/ViennaRNA
pkglibexecdir = $(libexecdir)/ViennaRNA
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = packaging/macosx
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_rna.m4 \
	$(top_srcdir)/m4/ac_rna_build_requirements.m4 \
	$(top_srcdir)/m4/ac_rna_colorize.m4 \
	$(top_srcdir)/m4/ac_rna_features.m4 \
	$(top_srcdir)/m4/ac_rna_latex.m4 \
	$(top_srcdir)/m4/ac_rna_lto.m4 \
	$(top_srcdir)/m4/ac_rna_macros.m4 \
	$(top_srcdir)/m4/ac_rna_osx.m4 \
	$(top_srcdir)/m4/ac_rna_refman.m4 \
	$(top_srcdir)/m4/ac_rna_subpackages.m4 \
	$(top_srcdir)/m4/ac_rna_swig.m4 \
	$(top_srcdir)/m4/ac_rna_tutorial.m4 \
	$(top_srcdir)/m4/ac_rna_unit_tests.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_openmp.m4 $(top_srcdir)/m4/ax_perl_ext.m4 \
	$(top_srcdir)/m4/ax_pkg_swig.m4 $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_python2_devel.m4 \
	$(top_srcdir)/m4/ax_python3_devel.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = Distribution.xml
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Distribution.xml.in $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14/config/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_CFLAGS = 
AM_CPPFLAGS = 
AM_CXXFLAGS = 
AM_DEFAULT_VERBOSITY = 0
AM_LDFLAGS = 
AR = ar
AUTOCONF = ${SHELL} /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14/config/missing autoconf
AUTOHEADER = ${SHELL} /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14/config/missing autoheader
AUTOMAKE = ${SHELL} /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14/config/missing automake-1.16
AWK = mawk
BIBTEX_CMD = /usr/bin/bibtex
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CHECK_CFLAGS = 
CHECK_LIBS = 
CLUSTER_DIR = 
CONFIG_BOUSTROPHEDON = #define VRNA_WITH_BOUSTROPHEDON
CONFIG_DISABLE_C11_FEATURES = 
CONFIG_FLOAT_PF = 
CONFIG_GSL = 
CONFIG_JSON = #define VRNA_WITH_JSON_SUPPORT
CONFIG_LTO = 
CONFIG_NR_SAMPLING = 
CONFIG_OPENMP = #define VRNA_WITH_OPENMP
CONFIG_SVM = #define VRNA_WITH_SVM
CONFIG_TTY_COLORS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPRECATION_WARNING = 
DIFF = /usr/bin/diff
DISABLE_C11_FEATURES = 
DLLTOOL = false
DOXYGEN_CMD_BIBTEX = 
DOXYGEN_CMD_LATEX = 
DOXYGEN_CMD_MAKEINDEX = 
DOXYGEN_CONF = doxygen.conf
DOXYGEN_DOCDIR = doc
DOXYGEN_GENERATE_HTML = 
DOXYGEN_GENERATE_LATEX = 
DOXYGEN_HAVE_DOT = 
DOXYGEN_PROJECT_NAME = RNAlib-2.4.14
DOXYGEN_SRCDIR = .
DOXYGEN_WITH_PDFLATEX = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FLOAT_PF_FLAG = 
GENGETOPT = no
GREP = /bin/grep
GSL_LIBS = 
HDIUTIL = 
HELP2MAN = no
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2020-02-17
LATEX_CMD = /usr/bin/pdflatex
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBGOMPFLAG = -fopenmp
LIBOBJS = 
LIBS = -lm 
LIBSVM_DIR = libsvm-3.23
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = config/ltmain.sh
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTO_CFLAGS = -flto -ffat-lto-objects
LTO_CXXFLAGS = -flto
LTO_LDFLAGS = -flto
LT_SYS_LIBRARY_PATH = 
MACOSX_INSTALLER = 
MAKEINDEX_CMD = /usr/bin/makeindex
MAKEINFO = ${SHELL} /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MPFR_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = -fopenmp
OTOOL = 
OTOOL64 = 
OUR_AR = no
OUR_NM = no
OUR_RANLIB = no
PACKAGE = ViennaRNA
PACKAGE_BUGREPORT = rna@tbi.univie.ac.at
PACKAGE_NAME = ViennaRNA
PACKAGE_STRING = ViennaRNA 2.4.14
PACKAGE_TARNAME = ViennaRNA
PACKAGE_URL = http://www.tbi.univie.ac.at/RNA
PACKAGE_VERSION = 2.4.14
PARAMETER_FILES = misc/dna_mathews1999.par misc/dna_mathews2004.par misc/rna_andronescu2007.par misc/rna_langdon2018.par misc/rna_misc_special_hairpins.par misc/rna_turner1999.par misc/rna_turner2004.par 
PARAMETER_FILES_HEX = misc/dna_mathews1999.hex misc/dna_mathews2004.hex misc/rna_andronescu2007.hex misc/rna_langdon2018.hex misc/rna_misc_special_hairpins.hex misc/rna_turner1999.hex misc/rna_turner2004.hex 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PERL_ARCH_RELATIVE_INSTALL_DIR = /lib/perl/5.14.2
PERL_EXT_CPPFLAGS = -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include
PERL_EXT_INC = /usr/lib/perl/5.14/CORE
PERL_EXT_LDFLAGS = -shared -O2 -g -L/usr/local/lib -fstack-protector
PERL_EXT_LIB = /usr/local/lib/perl/5.14.2
PERL_EXT_PREFIX = /usr
PERL_EXT_SITEARCH = /usr/local/lib/perl/5.14.2
PERL_EXT_SITELIB = /usr/local/share/perl/5.14.2
PERL_EXT_SITEPREFIX = /usr/local
PERL_EXT_VENDORARCH = /usr/lib/perl5
PERL_EXT_VENDORLIB = /usr/share/perl5
PERL_EXT_VENDORPREFIX = /usr
PERL_INTERFACE = Perl
PERL_LIB_RELATIVE_INSTALL_DIR = /share/perl/5.14.2
PERL_SO = .so
PKGBUILD = 
PKGPYEXEC2DIR = 
PKGPYTHON2DIR = 
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POW_LIB = 
PRODUCTBUILD = 
PS_TEMPLATE_FILES = postscript/structure_plot_macro_base.ps postscript/structure_plot_macro_extras.ps postscript/dot_plot_macro_base.ps postscript/dot_plot_macro_turn.ps postscript/dot_plot_macro_sd.ps postscript/dot_plot_macro_ud.ps postscript/dot_plot_macro_sc_motifs.ps postscript/dot_plot_macro_linear_data.ps postscript/aln_macro_base.ps 
PS_TEMPLATE_FILES_HEX = postscript/structure_plot_macro_base.hex postscript/structure_plot_macro_extras.hex postscript/dot_plot_macro_base.hex postscript/dot_plot_macro_turn.hex postscript/dot_plot_macro_sd.hex postscript/dot_plot_macro_ud.hex postscript/dot_plot_macro_sc_motifs.hex postscript/dot_plot_macro_linear_data.hex postscript/aln_macro_base.hex 
PTHREAD_CC = gcc -std=gnu99
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYEXEC2DIR = ${exec_prefix}/lib/python2.7/site-packages
PYTHON2 = /usr/bin/python2
PYTHON2DIR = ${prefix}/lib/python2.7/site-packages
PYTHON2_DIR = ${prefix}/lib/python2.7/site-packages
PYTHON2_EXECDIR = ${exec_prefix}/lib/python2.7/site-packages
PYTHON2_INC = /usr/include/python2.7
PYTHON2_INTERFACE = Python
PYTHON2_LD = gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro
PYTHON2_LDFLAGS = 
PYTHON2_SO = .so
PYTHON3 = /usr/bin/python3
PYTHON3_CACHE_OPT1_EXT = 
PYTHON3_CACHE_TAG = 
PYTHON3_DIR = 
PYTHON3_EXECDIR = 
PYTHON3_INC = /usr/include/python3.2mu
PYTHON3_INTERFACE = 
PYTHON3_LD = 
PYTHON3_LDFLAGS = 
PYTHON3_SO = 
RANLIB = ranlib
REFDOC_PREDEF_FLOAT_PF = 
REFDOC_PREDEF_JSON = VRNA_WITH_JSON_SUPPORT
REFDOC_PREDEF_SVM = VRNA_WITH_SVM
REFERENCE_MANUAL_PDF_NAME = RNAlib-2.4.14.pdf
REFERENCE_MANUAL_TAGFILE = RNAlib-2.4.14.tag
RNA_CFLAGS = -fno-strict-aliasing -fopenmp -ftree-vectorize
RNA_CPPFLAGS = 
RNA_CXXFLAGS = -fno-strict-aliasing -fopenmp
RNA_LDFLAGS = -fno-strict-aliasing
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SIMD_AVX512_FLAGS = 
SIMD_SSE41_FLAGS = -msse4.1
STRIP = strip
SWIG = 
SWIG_LIB = 
TUTORIAL_CMD_HTLATEX = 
TUTORIAL_CMD_LATEX = /usr/bin/pdflatex -interaction=nonstopmode -halt-on-error
TUTORIAL_DOCDIR = RNA-Tutorial
TUTORIAL_PDF_NAME = RNA-tutorial-2.4.14.pdf
TUTORIAL_PROJECT_NAME = RNA-tutorial-2.4.14
TUTORIAL_SRCDIR = .
USER_AR = 
USER_NM = 
USER_RANLIB = 
VERSION = 2.4.14
VRNA_CFLAGS =  -I$(top_srcdir)/../../src/ViennaRNA -I$(top_srcdir)/../../src 
VRNA_LIBS =  -fno-strict-aliasing -L$(top_builddir)/../../src/ViennaRNA -lRNA -fopenmp   
VRNA_VERSION_MAJOR = 2
VRNA_VERSION_MINOR = 4
VRNA_VERSION_PATCH = 14
XXD = /usr/bin/xxd
abs_builddir = /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14/packaging/macosx
abs_srcdir = /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14/packaging/macosx
abs_top_builddir = /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14
abs_top_srcdir = /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bibtex = /usr/bin/bibtex
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dot = /usr/bin/dot
doxygen = no
dvidir = ${docdir}
egrep = /bin/egrep
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htlatex = no
htmldir = ${datarootdir}/doc/${PACKAGE_TARNAME}/html
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/DATA/www/tripsviz/tripsviz/viennarna/ViennaRNA-2.4.14/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
makeindex = /usr/bin/makeindex
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pdflatex = /usr/bin/pdflatex
perl = /usr/bin/perl
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
py2execdir = ${exec_prefix}/lib/python2.7/site-packages
py3execdir = 
python2dir = ${prefix}/lib/python2.7/site-packages
python3dir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/Kinfold src/RNAforester src/RNAlocmin
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
prepare_verbose = $(prepare_verbose_$(V))
prepare_verbose_ = $(prepare_verbose_$(AM_DEFAULT_VERBOSITY))
prepare_verbose_0 = @echo PREPARE $@;
pkg_verbose = $(pkg_verbose_$(V))
pkg_verbose_ = $(pkg_verbose_$(AM_DEFAULT_VERBOSITY))
pkg_verbose_0 = @echo PKG-GEN $@;
dmg_verbose = $(dmg_verbose_$(V))
dmg_verbose_ = $(dmg_verbose_$(AM_DEFAULT_VERBOSITY))
dmg_verbose_0 = @echo DMG-GEN $@;
EXTRA_DIST = resources/welcome.txt \
              resources/conclusion.html \
              resources/ohm.png \
              uninstall-ViennaRNA-Package.sh

thisdir = packaging/macosx
abs_path_thisdir = $(abs_top_srcdir)/$(thisdir)
staging_core_dir = staging_core
staging_libRNA_dir = staging_libRNA
staging_perl_dir = staging_perl
staging_python_dir = staging_python
staging_kinfold_dir = staging_kinfold
staging_kinwalker_dir = staging_kinwalker
staging_forester_dir = staging_forester
staging_cluster_dir = staging_cluster
staging_rnalocmin_dir = staging_rnalocmin
staging_tutorial_dir = staging_tutorial
CORE_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Core".pkg
CLUSTER_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Cluster\ Analysis".pkg
KINFOLD_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Kinfold".pkg
KINWALKER_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Kinwalker".pkg
FORESTER_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ RNAforester".pkg
RNALOCMIN_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ RNAlocmin".pkg
DEV_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Development".pkg
TUTORIAL_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Tutorial".pkg
PERL_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Perl".pkg
PYTHON_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Python".pkg
VRNA_PKG_FILE = "ViennaRNA\ Package\ 2.4.14\ Installer".pkg
MACOSX_DMG_NAME = "ViennaRNA 2.4.14"
MACOSX_DMG_FILE = "ViennaRNA-2.4.14-MacOSX".dmg
remove_staging_core_dir = \
  { test ! -d $(staging_core_dir) \
    || { find $(staging_core_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_core_dir); }; }

remove_staging_libRNA_dir = \
  { test ! -d $(staging_libRNA_dir) \
    || { find $(staging_libRNA_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_libRNA_dir); }; }

remove_staging_kinfold_dir = \
  { test ! -d $(staging_kinfold_dir) \
    || { find $(staging_kinfold_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_kinfold_dir); }; }

remove_staging_cluster_dir = \
  { test ! -d $(staging_cluster_dir) \
    || { find $(staging_cluster_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_cluster_dir); }; }

remove_staging_kinwalker_dir = \
  { test ! -d $(staging_kinwalker_dir) \
    || { find $(staging_kinwalker_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_kinwalker_dir); }; }

remove_staging_forester_dir = \
  { test ! -d $(staging_forester_dir) \
    || { find $(staging_forester_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_forester_dir); }; }

remove_staging_rnalocmin_dir = \
  { test ! -d $(staging_rnalocmin_dir) \
    || { find $(staging_rnalocmin_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_rnalocmin_dir); }; }

remove_staging_tutorial_dir = \
  { test ! -d $(staging_tutorial_dir) \
    || { find $(staging_tutorial_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_tutorial_dir); }; }

remove_staging_perl_dir = \
  { test ! -d $(staging_perl_dir) \
    || { find $(staging_perl_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_perl_dir); }; }

remove_staging_python_dir = \
  { test ! -d $(staging_python_dir) \
    || { find $(staging_python_dir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(staging_python_dir); }; }

DISK_IMAGE = 
#DISK_IMAGE = "${MACOSX_DMG_FILE}"
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packaging/macosx/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign packaging/macosx/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
Distribution.xml: $(top_builddir)/config.status $(srcdir)/Distribution.xml.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	clean-local cscopelist-am ctags-am distclean distclean-generic \
	distclean-libtool distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags-am uninstall uninstall-am

.PRECIOUS: Makefile


all: $(DISK_IMAGE)

resources:
	$(prepare_verbose)$(MKDIR_P) ./resources
	$(prepare_verbose)cp $(top_srcdir)/README.md $(top_srcdir)/COPYING ./resources/ 

staging-core:
	$(prepare_verbose)$(remove_staging_core_dir)
	$(AM_V_at)$(MKDIR_P) $(staging_core_dir)$(prefix)/bin
	$(AM_V_at)cp uninstall-ViennaRNA-Package.sh $(staging_core_dir)$(prefix)/bin/
	$(AM_V_at)cd $(top_srcdir)/src/bin \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_core_dir)
	$(AM_V_at)cd $(top_srcdir)/src/Utils \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_core_dir)
	$(AM_V_at)cd $(top_srcdir)/man \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_core_dir)
	$(AM_V_at)cd $(top_srcdir)/misc \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_core_dir)

staging-cluster:
	$(prepare_verbose)$(remove_staging_cluster_dir)
	$(AM_V_at)cd $(top_srcdir)/src/Cluster \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_cluster_dir)

staging-kinfold:
	$(prepare_verbose)$(remove_staging_kinfold_dir)
	$(AM_V_at)cd $(top_srcdir)/src/Kinfold \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_kinfold_dir)

staging-forester:
	$(prepare_verbose)$(remove_staging_forester_dir)
	$(AM_V_at)$(MKDIR_P) $(staging_forester_dir)$(prefix)/bin
	$(AM_V_at)cp $(top_srcdir)/src/RNAforester/src/RNAforester $(staging_forester_dir)$(prefix)/bin
	$(AM_V_at)cd $(top_srcdir)/src/RNAforester/man \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_forester_dir)

staging-kinwalker:
	$(prepare_verbose)$(remove_staging_kinwalker_dir)
	$(AM_V_at)cd $(top_srcdir)/src/Kinwalker \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_kinwalker_dir)

staging-rnalocmin:
	$(prepare_verbose)$(remove_staging_rnalocmin_dir)
	$(AM_V_at)cd $(top_srcdir)/src/RNAlocmin \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_rnalocmin_dir)

staging-libRNA:
	$(prepare_verbose)$(remove_staging_libRNA_dir)
	$(AM_V_at)cd $(top_srcdir)/doc \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_libRNA_dir)
	$(AM_V_at)cd $(top_srcdir)/src/ViennaRNA \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_libRNA_dir)
	$(AM_V_at)$(MKDIR_P) $(staging_libRNA_dir)$(prefix)/lib/pkgconfig
	$(AM_V_at)cp $(top_srcdir)/RNAlib2.pc $(staging_libRNA_dir)$(prefix)/lib/pkgconfig

staging-tutorial:
	$(prepare_verbose)$(remove_staging_tutorial_dir)
	$(AM_V_at)cd $(top_srcdir)/RNA-Tutorial \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_tutorial_dir)

staging-perl:
	$(prepare_verbose)$(remove_staging_perl_dir)
	$(AM_V_at)cd $(top_srcdir)/interfaces/Perl \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_perl_dir)

staging-python:
	$(prepare_verbose)$(remove_staging_python_dir)
	$(AM_V_at)cd $(top_srcdir)/interfaces/Python \
      && $(MAKE) install DESTDIR=$(abs_path_thisdir)/$(staging_python_dir)

"${CORE_PKG_FILE}": staging-core
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.core --version 2.4.14 \
      --root ${staging_core_dir} "${CORE_PKG_FILE}"

"${DEV_PKG_FILE}": staging-libRNA
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.libRNA --version 2.4.14 \
      --root ${staging_libRNA_dir} "${DEV_PKG_FILE}"

"${CLUSTER_PKG_FILE}": staging-cluster
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.cluster --version 2.4.14 \
      --root ${staging_cluster_dir} "${CLUSTER_PKG_FILE}"

"${KINFOLD_PKG_FILE}": staging-kinfold
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.kinfold --version 2.4.14 \
      --root ${staging_kinfold_dir} "${KINFOLD_PKG_FILE}"

"${KINWALKER_PKG_FILE}": staging-kinwalker
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.kinwalker --version 2.4.14 \
      --root ${staging_kinwalker_dir} "${KINWALKER_PKG_FILE}"

"${FORESTER_PKG_FILE}": staging-forester
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.rnaforester --version 2.4.14 \
      --root ${staging_forester_dir} "${FORESTER_PKG_FILE}"

"${RNALOCMIN_PKG_FILE}": staging-rnalocmin
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.rnalocmin --version 2.4.14 \
      --root ${staging_rnalocmin_dir} "${RNALOCMIN_PKG_FILE}"

"${TUTORIAL_PKG_FILE}": staging-tutorial
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.tutorial --version 2.4.14 \
      --root ${staging_tutorial_dir} "${TUTORIAL_PKG_FILE}"

"${PERL_PKG_FILE}": staging-perl
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.perl --version 2.4.14 \
      --root ${staging_perl_dir} "${PERL_PKG_FILE}"

"${PYTHON_PKG_FILE}": staging-python
	$(pkg_verbose)$(PKGBUILD) --identifier org.TBI.ViennaRNA.python --version 2.4.14 \
      --root ${staging_python_dir} "${PYTHON_PKG_FILE}"

"${VRNA_PKG_FILE}":  resources \
                "${CORE_PKG_FILE}" \
                "${DEV_PKG_FILE}" \
                "${CLUSTER_PKG_FILE}" \
                "${KINFOLD_PKG_FILE}" \
                "${FORESTER_PKG_FILE}" \
                "${KINWALKER_PKG_FILE}" \
                "${RNALOCMIN_PKG_FILE}" \
                "${TUTORIAL_PKG_FILE}" \
                "${PERL_PKG_FILE}" \
                "${PYTHON_PKG_FILE}"
	$(pkg_verbose)$(PRODUCTBUILD)  --distribution ./Distribution.xml \
      --package-path . \
      --resources ./resources \
      ./"${VRNA_PKG_FILE}"

disk_image: "${VRNA_PKG_FILE}"
	$(prepare_verbose)$(MKDIR_P) disk_image
	$(AM_V_at)cp "${VRNA_PKG_FILE}" disk_image
	$(AM_V_at)cp $(top_srcdir)/README.md $(top_srcdir)/NEWS $(top_srcdir)/CHANGELOG.md $(top_srcdir)/AUTHORS $(top_srcdir)/THANKS disk_image/ 
	$(AM_V_at)cp $(top_srcdir)/COPYING disk_image/License

"${MACOSX_DMG_FILE}": disk_image
	$(dmg_verbose)$(HDIUTIL) create -ov -fs HFSX -layout SPUD -format UDZO \
    -volname ${MACOSX_DMG_NAME} -srcfolder disk_image \
    -imagekey zlib-level=9 -scrub "${MACOSX_DMG_FILE}"

clean-local:
	$(remove_staging_core_dir)
	$(remove_staging_libRNA_dir)
	$(remove_staging_kinfold_dir)
	$(remove_staging_cluster_dir)
	$(remove_staging_kinwalker_dir)
	$(remove_staging_forester_dir)
	$(remove_staging_rnalocmin_dir)
	$(remove_staging_tutorial_dir)
	$(remove_staging_perl_dir)
	$(remove_staging_python_dir)
	-rm -rf disk_image
	-rm -f  "${VRNA_PKG_FILE}" \
          "${PYTHON_PKG_FILE}" \
          "${PERL_PKG_FILE}" \
          "${FORESTER_PKG_FILE}" \
          "${KINWALKER_PKG_FILE}" \
          "${KINFOLD_PKG_FILE}" \
          "${CLUSTER_PKG_FILE}" \
          "${RNALOCMIN_PKG_FILE}" \
          "${TUTORIAL_PKG_FILE}" \
          "${DEV_PKG_FILE}" \
          "${CORE_PKG_FILE}"

PHONY:  resources \
        staging-core \
        staging-libRNA \
        staging-cluster \
        staging-kinfold \
        staging-forester \
        staging-kinwalker \
        staging-rnalocmin \
        staging-tutorial \
        staging-perl \
        staging-python \
        disk_image

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
